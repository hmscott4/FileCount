<?xml version="1.0" encoding="utf-8"?>
<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema"><TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Network.FileCount.WatcherNode" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false" Extension="false">
          <Property ID="CSV" Type="string" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
        <ClassType ID="Network.FileCount.Share" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false" Extension="false">
          <Property ID="ID" Type="int" AutoIncrement="false" Key="true" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Share" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="1024" MinLength="0" Required="false" Scale="0" />
          <Property ID="Extension" Type="string" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Count" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Age" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
          <Property ID="Recurse" Type="int" AutoIncrement="false" Key="false" CaseSensitive="false" MaxLength="256" MinLength="0" Required="false" Scale="0" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="NetworkFileCountWatcherNodeContainsFileShare" Accessibility="Public" Abstract="false" Base="System!System.Hosting">
          <Source ID="src" MinCardinality="0" MaxCardinality="2147483647" Type="Network.FileCount.WatcherNode" />
          <Target ID="trgt" MinCardinality="0" MaxCardinality="2147483647" Type="Network.FileCount.Share" />
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <SecureReferences>
      <SecureReference ID="Network.FileCount.RunasProfile" Accessibility="Public" />
    </SecureReferences>
    <ModuleTypes>
      <DataSourceModuleType ID="Network.FileCount.DataSource" Accessibility="Public" Batching="false" RunAs="Network.FileCount.RunasProfile">
        <Configuration>
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Share" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Extension" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Count" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Age" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="Recurse" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Interval" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="Share" Selector="$Config/Share$" ParameterType="string" />
          <OverrideableParameter ID="Extension" Selector="$Config/Extension$" ParameterType="string" />
          <OverrideableParameter ID="Count" Selector="$Config/Count$" ParameterType="int" />
          <OverrideableParameter ID="Age" Selector="$Config/Age$" ParameterType="int" />
          <OverrideableParameter ID="Recurse" Selector="$Config/Recurse$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Schedule" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Probe" TypeID="Network.FileCount.DataSource.PSScript" />
            </MemberModules>
            <Composition>
              <Node ID="Probe">
                <Node ID="Schedule" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <ProbeActionModuleType ID="Network.FileCount.DataSource.PSScript" Accessibility="Public" Batching="false" PassThrough="false" RunAs="Network.FileCount.RunasProfile">
        <Configuration>
          <xsd:element minOccurs="0" name="Share" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="Extension" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="Count" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="Age" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="0" name="Recurse" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <ProbeAction ID="PSScript" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
                <ScriptName>GetFileCount.ps1</ScriptName>
                <ScriptBody>
                  param([string]$Share, [string]$Extension, [int]$Count, [int]$Age, [int]$Recurse)

                  $ScriptName = "GetFileCount.ps1"
                  $EventID = 3521

                  # Starting Script section - All scripts get this
                  #=================================================================================
                  # Gather the start time of the script
                  $StartTime = Get-Date
                  #Set variable to be used in logging events
                  $whoami = whoami
                  # Load MOMScript API
                  $momapi = New-Object -comObject MOM.ScriptAPI
                  # Load PropertyBag function
                  $bag = $momapi.CreatePropertyBag()
                  #Log script event that we are starting task
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script is starting. `n Running as ($whoami).")
                  #=================================================================================

                  #Declare variables containing extension to check and file age

                  if($Extension.length -gt 0)
                  {
                  [string]$sExtension = "*"+$Extension
                  }
                  else
                  {
                  [string]$sExtension = "*"
                  }

                  [int]$iAge = $Age
                  [string]$sShare = $Share
                  [int]$iCount = $Count
                  [int]$iRecurse = $Recurse

                  # Test to see if Share is Accessible
                  If(Test-Path -path "$sShare" -pathType Container -ErrorAction SilentlyContinue)
                  {
                  # Count all files with the specific extension and older then the given time
                  if ($iRecurse -eq 1)
                  {
                  $fileCount  = Get-ChildItem -Recurse "$sShare\$sExtension" | where{$_.LastWriteTime -le (Get-Date).AddMinutes($iAge)}|Measure-Object |%{$_.Count}

                  if ($fileCount -le $iCount)
                  {
                  $strStatus = 1
                  $strMessage="Number of Files ($fileCount) in $sShare is under threshold $iCount."
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Found $fileCount file(s) with extension $sExtension in $sShare. `n Under threshold $iCount.")
                  }
                  else
                  {
                  $strMessage="Number of Files ($count) in $sShare exceeds threshold $intCount."
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Found $fileCount file(s) with extension $sExtension in $sShare.`n Exceeds threshold $iCount.")
                  $strStatus = 0
                  }
                  }
                  else
                  {
                  $fileCount  = Get-ChildItem "$sShare\$sExtension" | where{$_.LastWriteTime -le (Get-Date).AddMinutes($iAge)}|Measure-Object |%{$_.Count}

                  if ($fileCount -le $iCount)
                  {
                  $strMessage="Number of Files ($fileCount) in $sShare is under threshold $iCount."
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Found $fileCount file(s) with extension $sExtension in $sShare. `n Under threshold $iCount.")
                  $strStatus = 1
                  }
                  else
                  {

                  $strMessage="Number of Files ($fileCount) in $sShare exceeds threshold $iCount."
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Found $fileCount file(s) with extension $sExtension in $sShare.`n Exceeds threshold $iCount.")
                  $strStatus = 0
                  }
                  }
                  }

                  Else
                  {
                  # Unable to access File Share
                  $strMessage="Unable to access $sShare"
                  $momapi.LogScriptEvent($ScriptName,$EventID,2,"`n Unable to access $sShare as $whoami.")
                  $count = 0
                  $strStatus = 0
                  }

                  # End of script section
                  #=================================================================================
                  #Log an event for script ending and total execution time.
                  $EndTime = Get-Date
                  $ScriptTime = ($EndTime - $StartTime).TotalSeconds
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")


                  #add the values to the bag
                  $bag.AddValue('Message', $strMessage)
                  $bag.AddValue('Status', $strStatus)
                  $bag.AddValue('Files',$fileCount)
                  $bag
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>Share</Name>
                    <Value>$Config/Share$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Extension</Name>
                    <Value>$Config/Extension$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Count</Name>
                    <Value>$Config/Count$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Age</Name>
                    <Value>$Config/Age$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>Recurse</Name>
                    <Value>$Config/Recurse$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>300</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="PSScript" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
        <TriggerOnly>true</TriggerOnly>
      </ProbeActionModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Network.FileCount.Status.MonitorType" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="FileCountStatusOK" NoDetection="false" />
          <MonitorTypeState ID="FileCountStatusNotOK" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Share" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Extension" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Count" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Age" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element name="Recurse" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="Share" Selector="$Config/Share$" ParameterType="string" />
          <OverrideableParameter ID="Extension" Selector="$Config/Extension$" ParameterType="string" />
          <OverrideableParameter ID="Count" Selector="$Config/Count$" ParameterType="int" />
          <OverrideableParameter ID="Age" Selector="$Config/Age$" ParameterType="int" />
          <OverrideableParameter ID="Recurse" Selector="$Config/Recurse$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DS" TypeID="Network.FileCount.DataSource">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <Share>$Config/Share$</Share>
              <Extension>$Config/Extension$</Extension>
              <Count>$Config/Count$</Count>
              <Age>$Config/Age$</Age>
              <Recurse>$Config/Recurse$</Recurse>
            </DataSource>
            <ConditionDetection ID="FilterFileCountStatusOK" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">1</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="FilterFileCountStatusNotOK" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='Status']</XPathQuery>
                  </ValueExpression>
                  <Operator>Equal</Operator>
                  <ValueExpression>
                    <Value Type="Integer">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="FileCountStatusOK">
              <Node ID="FilterFileCountStatusOK">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="FileCountStatusNotOK">
              <Node ID="FilterFileCountStatusNotOK">
                <Node ID="DS" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
<Monitoring>
    <Discoveries>
      <Discovery ID="Network.FileCount.WatcherNode.Discovery" Target="Windows!Microsoft.Windows.OperatingSystem" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Network.FileCount.WatcherNode" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>FileCountExists</AttributeName>
              <Path>SOFTWARE\FileCount</Path>
              <PathType>0</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>CSV</AttributeName>
              <Path>SOFTWARE\FileCount\CSV</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>86400</Frequency>
          <ClassId>$MPElement[Name="Network.FileCount.WatcherNode"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>FileCount WatcherNode ($Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetbiosComputerName$)</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Network.FileCount.WatcherNode"]/CSV$</Name>
                <Value>$Data/Values/CSV$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="Boolean">Values/FileCountExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="Boolean">true</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="Network.FileCount.Share.Discovery" Target="Network.FileCount.WatcherNode" Enabled="true" ConfirmDelivery="false" Remotable="false" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Network.FileCount.Share" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>3600</IntervalSeconds>
          <SyncTime />
          <ScriptName>GetSharesFromCSV.ps1</ScriptName>
          <ScriptBody>param($sourceId,$managedEntityId,$computerName,$csv)


#Create Discovery Property Bag
$api = new-object -comObject 'MOM.ScriptAPI'
$discoveryData = $api.CreateDiscoveryData(0, $SourceId, $ManagedEntityId)
$api.LogScriptEvent("GetSharesFromCSV.ps1", 3520, 0, "Discovery Started")

#Read data from csv file specified in the registry

$shares = Import-csv -path $csv

#Loop through all listed shares and create appropriate SCOM objects

foreach ($share in $shares)
{
    #Create Class Instance
    $instance = $discoveryData.CreateClassInstance("$MPElement[Name='Network.FileCount.Share']$")

    #Fill up properties of class
        $instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/ID$", $share.ID)
        $instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/Share$", $share.Share)
        if($share.Extension){$instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/Extension$", $Share.extension)}
        if($share.Count){$instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/Count$", $share.Count)}
        if($share.Age){$instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/Age$", $share.Age)}
		$instance.AddProperty("$MPElement[Name='Network.FileCount.Share']/Recurse$", $Share.Recurse)

    #Add the displayname, path of the server and key property of the parent class. (always recurring)
        $instance.AddProperty("$MPElement[Name='System!System.Entity']/DisplayName$", $share.Share)
        $instance.AddProperty("$MPElement[Name='Network.FileCount.WatcherNode']/CSV$", $csv)
        $instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName) 
    #Add the instance to the discoverydate propertybag
    
    $discoveryData.AddInstance($instance) 
    $api.LogScriptEvent("GetSharesFromCSV.ps1", 3520, 0, "Added instance $share.Share")  

}

$api.LogScriptEvent("GetSharesFromCSV.ps1", 3520, 0, "Discovery Ended")

$discoveryData


</ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceID</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityID</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>computerName</Name>
              <Value>$Target/Host/Property[Type='Windows!Microsoft.Windows.Computer']/PrincipalName$</Value>
            </Parameter>
            <Parameter>
              <Name>CSV</Name>
              <Value>$Target/Property[Type='Network.FileCount.WatcherNode']/CSV$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>300</TimeoutSeconds>
          <StrictErrorHandling>true</StrictErrorHandling>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="Network.FileCount.Share.Monitoring.PSScript.Rule.CollectFileCount" Enabled="true" Target="Network.FileCount.Share" ConfirmDelivery="true" Remotable="false" Priority="Normal" DiscardLevel="100">
        <Category>PerformanceCollection</Category>
        <DataSources>
          <DataSource ID="DataSource" TypeID="Network.FileCount.DataSource" RunAs="Network.FileCount.RunasProfile">
            <IntervalSeconds>900</IntervalSeconds>
            <SyncTime></SyncTime>
            <Share>$Target/Property[Type='Network.FileCount.Share']/Share$</Share>
            <Extension>$Target/Property[Type='Network.FileCount.Share']/Extension$</Extension>
            <Count>$Target/Property[Type='Network.FileCount.Share']/Count$</Count>
            <Age>$Target/Property[Type='Network.FileCount.Share']/Age$</Age>
            <Recurse>$Target/Property[Type='Network.FileCount.Share']/Recurse$</Recurse>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="MapToPerf" TypeID="Perf!System.Performance.DataGenericMapper">
          <ObjectName>$Target/Host/Host/Property[Type='Windows!Microsoft.Windows.Computer']/PrincipalName$</ObjectName>
          <CounterName>File Count</CounterName>
          <InstanceName>$Target/Property[Type='Network.FileCount.Share']/Share$</InstanceName>
          <Value>$Data/Property[@Name='Files']$</Value>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WriteToDBLicenses" TypeID="SC!Microsoft.SystemCenter.CollectPerformanceData" />
          <WriteAction ID="PublishLicenses" TypeID="MSDL!Microsoft.SystemCenter.DataWarehouse.PublishPerformanceData" />
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="Network.FileCount.File.Share.File.Count.Monitor" Accessibility="Public" Enabled="true" Target="Network.FileCount.Share" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="false" Priority="Normal" RunAs="Network.FileCount.RunasProfile" TypeID="Network.FileCount.Status.MonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Network.FileCount.File.Share.File.Count.Monitor.AlertMessage">
          <AlertOnState>Error</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
          <AlertParameters>
            <AlertParameter1>$Target/Property[Type='Network.FileCount.Share']/Share$</AlertParameter1>
            <AlertParameter2>$Data/Context/Property[@Name='Files']$</AlertParameter2>
            <AlertParameter3>$Target/Property[Type='Network.FileCount.Share']/Extension$</AlertParameter3>
          </AlertParameters>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="FileCountStatusOK" MonitorTypeStateID="FileCountStatusOK" HealthState="Success" />
          <OperationalState ID="FileCountStatusNotOK" MonitorTypeStateID="FileCountStatusNotOK" HealthState="Error" />
        </OperationalStates>
        <Configuration>
          <IntervalSeconds>300</IntervalSeconds>
          <SyncTime></SyncTime>
          <Share>$Target/Property[Type='Network.FileCount.Share']/Share$</Share>
          <Extension>$Target/Property[Type='Network.FileCount.Share']/Extension$</Extension>
          <Count>$Target/Property[Type='Network.FileCount.Share']/Count$</Count>
          <Age>$Target/Property[Type='Network.FileCount.Share']/Age$</Age>
          <Recurse>$Target/Property[Type='Network.FileCount.Share']/Recurse$</Recurse>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring><Presentation>
    <Views>
      <View ID="Network.FileCount.Alert.view" Accessibility="Public" Enabled="true" Target="Network.FileCount.Share" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Operations</Category>
        <Criteria>
          <ResolutionState>
            <State>0</State>
          </ResolutionState>
        </Criteria>
      </View>
      <View ID="Network.FileCount.Share.State.view" Accessibility="Public" Enabled="true" Target="Network.FileCount.Share" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
      </View>
      <View ID="Network.FileCount.Watchernode.State.view" Accessibility="Public" Enabled="true" Target="Network.FileCount.WatcherNode" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Operations</Category>
      </View>
    </Views>
    <Folders>
      <Folder ID="Network.FileCount.Folder" Accessibility="Public" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
      <Folder ID="Network.FileCount.State.Folder" Accessibility="Public" ParentFolder="Network.FileCount.Folder" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="Network.FileCount.Alert.view" Folder="Network.FileCount.Folder" ID="Network.FileCount.Alert.view.FolderItem" />
      <FolderItem ElementID="Network.FileCount.Share.State.view" Folder="Network.FileCount.State.Folder" ID="Network.FileCount.Share.State.view.FolderItem" />
      <FolderItem ElementID="Network.FileCount.Watchernode.State.view" Folder="Network.FileCount.State.Folder" ID="Network.FileCount.Watchernode.State.view.FolderItem" />
    </FolderItems>
    <StringResources>
      <StringResource ID="Network.FileCount.File.Share.File.Count.Monitor.AlertMessage" />
    </StringResources>
  </Presentation><LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Network.FileCount.WatcherNode.Discovery">
          <Name>WatcherNode.Discovery</Name>
          <Description>Description for the new discovery.</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share.Discovery">
          <Name>FileCountShare.Discovery</Name>
          <Description>Discovery for all shares that will be having file count monitoring</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.File.Share.File.Count.Monitor">
          <Name>File Share File Count Monitor</Name>
          <Description>Used to monitor the amount of files in the specific share matching the given extension</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.File.Share.File.Count.Monitor.AlertMessage">
          <Name>File Count Exceeded</Name>
          <Description>The fileshare  {0} has {1} unprocessed files with extension {2}</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.File.Share.File.Count.Monitor" SubElementID="FileCountStatusOK">
          <Name>FileCountStatusOK</Name>
          <Description>FileCountStatusOK</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.File.Share.File.Count.Monitor" SubElementID="FileCountStatusNotOK">
          <Name>FileCountStatusNotOK</Name>
          <Description>FileCountStatusNotOK</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share.Monitoring.PSScript.Rule.CollectFileCount">
          <Name>Collect Filecount</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.WatcherNode">
          <Name>Network File Count Watcher Node</Name>
          <Description>This is a Windows Computer that will initiate the file count monitors</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share">
          <Name>Network File Count Share</Name>
          <Description>This is a Share where files will be counted based on the data provided in the CSV file</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.WatcherNode" SubElementID="CSV">
          <Name>CSV Path</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="ID">
          <Name>ID</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="Share">
          <Name>Share</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="Extension">
          <Name>Extension</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="Count">
          <Name>Count</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="Age">
          <Name>Age</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share" SubElementID="Recurse">
          <Name>Recurse</Name>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Folder">
          <Name>Network File Count</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.State.Folder">
          <Name>State Views</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.RunasProfile">
          <Name>Network File Count Runas Profile</Name>
          <Description>Used to monitor the specified fileshares</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount">
          <Name>Network FileCount ManagementPack</Name>
          <Description>Count files in an existing UNC path.  Discover UNC paths from CSV file located on server.  See MP Guide for additional configuration information.</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Alert.view">
          <Name>Network File Count Share Alerts</Name>
          <Description>Overview of all open alerts on File count folders</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Share.State.view">
          <Name>File Count Share State</Name>
          <Description>This view shows the state of all Filecount Shares</Description>
        </DisplayString>
        <DisplayString ElementID="Network.FileCount.Watchernode.State.view">
          <Name>File Count Watcher Node State</Name>
          <Description>This view shows the state of all File Count Share Watchernode(s)</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="Network.FileCount.Status.MonitorType" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This monitor checks a UNC (shared folder) for a count of files.  The monitor can test for specific file extensions and can be recursive or non-recursive.  If the file count exceeds the threshold defined in the parameter file, then an error occurs.</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Error Conditions</maml:title>
              <maml:para>If this monitor fails, check to be sure that the UNC path still exists and that the RunAs account is defined and has permissions to the share.  Also check to see that the count of files matching the conditions defined does not exceed the threshold value.</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks></ManagementPackFragment>