<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--
%%
Description:
  An AGENT TASK that will run a PowerShell Script with Parameters passed to the script
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your app with NO SPACES OR SPECIAL CHARACTERS ALLOWED   
  ClassID - is the targeted class such as your custom class or Windows!Microsoft.Windows.Server.OperatingSystem
  TaskName - is a short name for the task with NO SPACES OR SPECIAL CHARACTERS ALLOWED 
  You will need to customize your parameters in this example and add or remove as needed

Version: 1.0
LastModified: 29-May-2017
%%

In this fragment you need to replace:
  Network
  File.Share
  Network.File.Share.Share
  FileCatalog.New

This fragment depends on references:
  RequiredReference: Alias="System", ID="System.Library"
  RequiredReference: Alias="Windows", ID="Microsoft.Windows.Library"

@@Author=Kevin Holman@@  
-->
  <TypeDefinitions>
    <ModuleTypes>
      <WriteActionModuleType ID="Network.File.Share.FileCatalog.New.Task.WA" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="FileShare" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="FileCatalog" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="FileShare" Selector="$Config/FileShare$" ParameterType="string" />
          <OverrideableParameter ID="FileCatalog" Selector="$Config/FileCatalog$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <WriteAction ID="PSWA" TypeID="Windows!Microsoft.Windows.PowerShellWriteAction">
                <ScriptName>Network.File.Share.FileCatalog.New.Task.WA.ps1</ScriptName>
                <ScriptBody>
                  #=================================================================================
                  #  Script to execute a task in PowerShell
                  #=================================================================================
                  param($FileShare, $FileCatalog)
                  #=================================================================================
                  # Constants section - modify stuff here:

                  # Assign script name variable for use in event logging
                  $ScriptName = "Network.File.Share.FileCatalog.New.Task.WA.ps1"
                  #=================================================================================

                  # Gather script start time
                  $StartTime = Get-Date

                  # Gather who the script is running as
                  $whoami = whoami

                  #Load the MOMScript API and discovery propertybag
                  $momapi = New-Object -comObject "Mom.ScriptAPI"

                  # Set EventID
                  $EventID = 3526
                  #=================================================================================

                  #Log script event that we are starting task
                  $momapi.LogScriptEvent($ScriptName,$EventID,0, "Starting script task.  Running as ($whoami). `n FileShare: $FileShare `n FileCatalog: $FileCatalog")

                  # Begin Main Script
                  #=================================================================================
                  
                  
                  Write-Host "PowerShell script executed"
                  Write-Host "FileShare: " $FileShare
                  Write-Host "FileCatalog: " $FileCatalog
                  #=================================================================================

                  # Log an event for script ending and total execution time.
                  $EndTime = Get-Date
                  $ScriptTime = ($EndTime - $StartTime).TotalSeconds
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script has completed. `n Runtime was ($ScriptTime) seconds.")
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>FileShare</Name>
                    <Value>$Config/FileShare$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>FileCatalog</Name>
                    <Value>$Config/FileCatalog$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </WriteAction>
            </MemberModules>
            <Composition>
              <Node ID="PSWA" />
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.BaseData</OutputType>
        <InputType>System!System.BaseData</InputType>
      </WriteActionModuleType>
    </ModuleTypes>
  </TypeDefinitions>
  <Monitoring>
    <Tasks>
      <Task ID="Network.File.Share.FileCatalog.New.Task" Accessibility="Public" Enabled="true" Target="Network.File.Share.Share" Timeout="120" Remotable="false"  RunAs="Network.File.Share.RunasProfile">
        <Category>Custom</Category>
        <WriteAction ID="PSWA" TypeID="Network.File.Share.FileCatalog.New.Task.WA">
          <FileShare>$Target/Property[Type="Network.File.Share.Share"]/Share$</FileShare>
          <FileCatalog>$Target/Host/Property[Type="Network.File.Share.WatcherNode"]/FileCatalog$</FileCatalog>
          <TimeoutSeconds>60</TimeoutSeconds>
        </WriteAction>
      </Task>
    </Tasks>
  </Monitoring>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Network.File.Share.FileCatalog.New.Task">
          <Name>Network File Share Create File Catalog Task</Name>
          <Description>Create a file catalog using New-FileCatalog Cmdlet.</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles></KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>
